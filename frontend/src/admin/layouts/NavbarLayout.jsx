import { useState } from "react";
import { useNavigate, useLocation, NavLink } from "react-router-dom";
import {
  AppBar,
  Toolbar,
  Drawer,
  Box,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  IconButton,
  Avatar,
  Typography,
  Menu,
  MenuItem,
  useMediaQuery,
} from "@mui/material";
import { AccountCircle, Logout, Menu as MenuIcon } from "@mui/icons-material";
import { useContextData } from "../../context/context";



const DashboardIcon = () => (
  <svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M10.0005 1.37569e-08C12.0755 -0.000108796 14.0991 0.645256 15.7909 1.84665C17.4827 3.04804 18.7589 4.74595 19.4426 6.70506C20.1263 8.66417 20.1837 10.7874 19.6067 12.7806C19.0297 14.7737 17.847 16.5381 16.2225 17.829C16.0457 17.9695 15.8264 18.046 15.6005 18.046H4.40053C4.17463 18.046 3.9554 17.9695 3.77852 17.829C2.15402 16.5381 0.971328 14.7737 0.394361 12.7806C-0.182606 10.7874 -0.12527 8.66417 0.558424 6.70506C1.24212 4.74595 2.51831 3.04804 4.21011 1.84665C5.90192 0.645256 7.92554 -0.000108796 10.0005 1.37569e-08ZM14.2075 5.839C14.02 5.65153 13.7657 5.54621 13.5005 5.54621C13.2354 5.54621 12.9811 5.65153 12.7935 5.839L10.5175 8.113C10.2308 8.03677 9.93067 8.02519 9.63891 8.0791C9.34714 8.13302 9.07099 8.25108 8.83043 8.42476C8.58986 8.59844 8.39089 8.82339 8.24788 9.08337C8.10487 9.34334 8.02141 9.63183 8.00352 9.928L8.00052 10.046C8.00105 10.3303 8.0622 10.6113 8.17989 10.8702C8.29759 11.129 8.46913 11.3598 8.68306 11.5471C8.897 11.7344 9.14842 11.8739 9.42055 11.9564C9.69268 12.0388 9.97926 12.0623 10.2612 12.0253C10.5431 11.9882 10.8139 11.8915 11.0555 11.7415C11.297 11.5915 11.5038 11.3917 11.6621 11.1555C11.8204 10.9192 11.9264 10.652 11.9732 10.3715C12.02 10.091 12.0065 9.80382 11.9335 9.529L14.2075 7.253C14.395 7.06547 14.5003 6.81116 14.5003 6.546C14.5003 6.28084 14.395 6.02653 14.2075 5.839Z" fill="#1C1C26" />
  </svg>

);

const PetOwnerIcon = () => (
  <svg width="19" height="17" viewBox="0 0 19 17" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M6.75556 0C7.334 0 7.86473 0.212293 8.25107 0.604537C8.6374 0.997195 8.86667 1.55778 8.86667 2.23405C8.86667 2.907 8.64036 3.58244 8.27133 4.09368C7.904 4.60244 7.372 4.97561 6.75556 4.97561C6.13911 4.97561 5.60711 4.60244 5.23978 4.09368C4.87076 3.58244 4.64444 2.907 4.64444 2.23446C4.64444 1.55778 4.87371 0.997195 5.26047 0.604537C5.64638 0.212293 6.17711 0 6.75556 0ZM2.11111 3.73171C2.68956 3.73171 3.22029 3.944 3.60662 4.33624C3.99296 4.7289 4.22222 5.28949 4.22222 5.96576C4.22222 6.63871 3.99591 7.31415 3.62689 7.82539C3.25956 8.33415 2.72756 8.70732 2.11111 8.70732C1.49467 8.70732 0.962667 8.33415 0.595333 7.82539C0.226311 7.31415 0 6.63829 0 5.96617C0 5.28949 0.229267 4.7289 0.616022 4.33624C1.00193 3.944 1.53267 3.73171 2.11111 3.73171ZM9.5 6.63415C6.49209 6.63415 4.00013 9.1489 3.21564 12.3022C2.86773 13.7012 3.39847 15.2017 4.70736 15.9128C5.74729 16.4784 7.3036 17 9.49958 17C11.696 17 13.2523 16.4784 14.2926 15.9128C15.6011 15.2017 16.1318 13.7012 15.7839 12.3026C14.9999 9.1489 12.5075 6.63415 9.5 6.63415ZM16.8889 3.73171C16.3104 3.73171 15.7797 3.944 15.3938 4.33624C15.007 4.7289 14.7778 5.28949 14.7778 5.96576C14.7778 6.63871 15.0041 7.31415 15.3731 7.82539C15.7404 8.33415 16.2724 8.70732 16.8889 8.70732C17.5053 8.70732 18.0373 8.33415 18.4047 7.82539C18.7737 7.31415 19 6.63871 19 5.96617C19 5.28949 18.7707 4.7289 18.3844 4.33624C17.9981 3.944 17.4673 3.73171 16.8889 3.73171ZM12.2444 0C11.666 0 11.1353 0.212293 10.7494 0.604537C10.3626 0.997195 10.1333 1.55778 10.1333 2.23405C10.1333 2.907 10.3596 3.58244 10.7287 4.09368C11.096 4.60244 11.628 4.97561 12.2444 4.97561C12.8609 4.97561 13.3929 4.60244 13.7602 4.09368C14.1292 3.58244 14.3556 2.907 14.3556 2.23446C14.3556 1.55778 14.1263 0.997195 13.74 0.604537C13.3536 0.212293 12.8229 0 12.2444 0Z" fill="#1E1E1E" />
  </svg>

);

const VetIcon = () => (
  <svg width="22" height="27" viewBox="0 0 22 27" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M11.374 11.016C13.9863 11.016 16.104 8.83044 16.104 6.13441C16.104 3.43837 13.9863 1.25281 11.374 1.25281C8.76169 1.25281 6.644 3.43837 6.644 6.13441C6.644 8.83044 8.76169 11.016 11.374 11.016Z" fill="#1C1C26" />
    <path d="M8.316 16.1352C9.394 16.0704 9.768 13.9752 9.768 13.9752L7.92 13.4136L7.26 12.5496C7.194 12.528 7.128 12.5064 7.062 12.5064C6.996 12.4848 6.952 12.4848 6.908 12.4632C6.864 12.4416 6.798 12.4416 6.754 12.42L6.666 12.3984L6.072 10.6272L5.456 12.1392L4.4 11.9664L3.41 10.6056L2.354 15.228C1.892 16.4376 1.518 17.3664 1.21 18.1008C0.769999 19.1808 1.584 20.3256 2.75 20.3256H6.38L6.424 19.8072L6.688 16.1136C6.688 16.1136 6.93 16.1352 7.414 16.1352C7.656 16.1568 7.964 16.1568 8.316 16.1352ZM6.094 13.7592C6.072 13.8672 5.984 13.9536 5.874 13.9752C5.852 13.9752 5.83 13.9752 5.808 13.9752C5.632 13.9752 5.5 13.824 5.522 13.6296C5.544 13.5216 5.632 13.4352 5.742 13.4136C5.764 13.4136 5.786 13.4136 5.808 13.4136C5.984 13.4352 6.138 13.5864 6.094 13.7592Z" fill="#1C1C26" />
    <path d="M20.9 17.1072C20.526 14.1696 17.798 12.5712 15.84 11.7936V13.3488C16.192 13.392 16.5 13.5432 16.764 13.8024C17.578 14.6232 17.732 16.3296 17.732 17.604C17.732 18.2952 17.16 18.8784 16.478 18.8784H16.368C16.302 18.9432 16.214 18.9864 16.104 18.9864C15.906 18.9864 15.73 18.8352 15.73 18.6192C15.73 18.4248 15.884 18.252 16.104 18.252C16.214 18.252 16.302 18.2952 16.368 18.36H16.478C16.896 18.36 17.248 18.0144 17.248 17.5608C17.27 16.5888 17.16 14.8392 16.434 14.0832C16.214 13.8672 15.95 13.7592 15.62 13.7592C15.29 13.7592 15.026 13.8672 14.806 14.0832C14.058 14.8176 13.97 16.5672 13.992 17.5608C13.992 17.9928 14.344 18.36 14.762 18.36H14.872C14.938 18.2952 15.026 18.252 15.136 18.252C15.334 18.252 15.51 18.4032 15.51 18.6192C15.51 18.8136 15.356 18.9864 15.136 18.9864C15.026 18.9864 14.938 18.9432 14.872 18.8784H14.762C14.08 18.8784 13.508 18.3168 13.508 17.604C13.486 16.308 13.64 14.6016 14.476 13.8024C14.74 13.5432 15.048 13.392 15.4 13.3488V11.6208C14.674 11.3616 14.102 11.232 13.904 11.1888C12.474 12.2904 10.472 12.2904 9.064 11.1888C8.844 11.232 8.074 11.4264 7.15 11.7936C7.26 11.8152 7.37 11.8584 7.502 11.88L7.744 11.9448L7.898 12.1392L8.404 12.8088L10.032 13.3056L10.648 13.5L10.538 14.1264C10.45 14.5584 9.966 16.7616 8.404 16.8696C8.074 16.8912 7.744 16.9128 7.458 16.9128C7.436 16.9128 7.436 16.9128 7.414 16.9128L7.194 20.0016C8.382 20.2176 9.79 20.3688 11.462 20.3688C16.654 20.3688 19.36 18.9864 20.416 18.252C20.746 17.9712 20.944 17.5392 20.9 17.1072Z" fill="#1C1C26" />
  </svg>

);

const ShelterIcon = () => (
  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_1207_27)">
      <path d="M8.49687 1.13125C8.19063 0.95625 7.8125 0.95625 7.50313 1.13125L0.503125 5.13125C0.19375 5.30937 0 5.64062 0 6V16C0 16.5531 0.446875 17 1 17C1.55313 17 2 16.5531 2 16V6.58125L8 3.15313L14 6.58125V16C14 16.5531 14.4469 17 15 17C15.5531 17 16 16.5531 16 16V6C16 5.64062 15.8062 5.30937 15.4969 5.13125L8.49687 1.13125Z" fill="#1C1C26" />
      <path d="M7.52291 6.05008L8.72727 6.88904H9.54545L10.7506 6.05084C10.7907 6.02317 10.8382 6.00636 10.888 6.00227C10.9377 5.99818 10.9877 6.00697 11.0324 6.02766C11.0771 6.04835 11.1147 6.08013 11.1411 6.11948C11.1674 6.15882 11.1816 6.20418 11.1818 6.25052V8.78716C11.1818 9.33534 10.7547 9.68611 10.3636 9.98145V12.963L11.0182 14.7852L11.5958 15.0532C11.7176 15.1094 11.82 15.196 11.8914 15.3033C11.9628 15.4107 12.0004 15.5345 12 15.6606C12 15.8482 11.8364 16 11.6343 16H4.84091C3.83209 16 3 15.2408 3 14.2636C3 12.616 3.37064 11.3914 3.60955 10.5676C3.729 10.1553 3.84682 9.84631 3.93109 9.63296C3.97855 9.51376 4.02518 9.40291 4.08818 9.29206C4.45554 8.6429 5.51509 9.13262 5.18618 9.79924C5.14744 9.87848 5.11115 9.95874 5.07736 10.0399C5.00291 10.2161 4.90227 10.4901 4.79427 10.8629C4.593 11.5576 4.36964 12.5993 4.27473 14.0009C4.57582 12.4369 6.25636 10.8667 7.61045 9.74229C7.32818 9.49478 7.09173 9.19563 7.09173 8.78716V6.24976C7.09173 6.04476 7.34536 5.92708 7.52291 6.05008Z" fill="#1C1C26" />
    </g>
    <defs>
      <clipPath id="clip0_1207_27">
        <rect width="16" height="16" fill="white" />
      </clipPath>
    </defs>
  </svg>

);

const Products = () => (
  <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M5.84375 4.26061V3.54166C5.84375 2.83718 6.1236 2.16155 6.62175 1.6634C7.11989 1.16526 7.79552 0.885406 8.5 0.885406C9.20448 0.885406 9.88011 1.16526 10.3783 1.6634C10.8764 2.16155 11.1563 2.83718 11.1563 3.54166V4.26061C12.0679 4.28824 12.626 4.38599 13.0518 4.73945C13.6418 5.22961 13.7976 6.05836 14.1086 7.71657L14.6398 10.5499C15.0769 12.8817 15.295 14.0477 14.6582 14.8155C14.0208 15.5833 12.8343 15.5833 10.4621 15.5833H6.53792C4.165 15.5833 2.97925 15.5833 2.34175 14.8155C1.70425 14.0477 1.92383 12.8817 2.36017 10.5499L2.89142 7.71657C3.20308 6.05907 3.35821 5.22961 3.94825 4.73945C4.37396 4.38599 4.93213 4.28824 5.84375 4.26061ZM6.90625 3.54166C6.90625 3.11897 7.07416 2.71359 7.37305 2.41471C7.67194 2.11582 8.07731 1.94791 8.5 1.94791C8.92269 1.94791 9.32807 2.11582 9.62695 2.41471C9.92584 2.71359 10.0938 3.11897 10.0938 3.54166V4.24999H6.90625V3.54166Z" fill="#1C1C26" />
  </svg>

);

const MessageIcon = () => (
  <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M0.843125 3.36774C0.877596 3.30674 0.927638 3.25599 0.988141 3.22066C1.04864 3.18533 1.11744 3.1667 1.1875 3.16666H15.4375C16.1724 3.16666 16.8771 3.45858 17.3968 3.97821C17.9164 4.49785 18.2083 5.20262 18.2083 5.93749V13.0625C18.2083 13.7974 17.9164 14.5021 17.3968 15.0218C16.8771 15.5414 16.1724 15.8333 15.4375 15.8333H5.9375C5.20263 15.8333 4.49786 15.5414 3.97823 15.0218C3.45859 14.5021 3.16667 13.7974 3.16667 13.0625V7.63007L0.847875 3.76674C0.811819 3.70661 0.79238 3.63799 0.791545 3.56788C0.790711 3.49778 0.808511 3.42871 0.843125 3.36774ZM5.9375 5.73957C5.78003 5.73957 5.62901 5.80213 5.51766 5.91348C5.40631 6.02483 5.34375 6.17585 5.34375 6.33332C5.34375 6.4908 5.40631 6.64182 5.51766 6.75317C5.62901 6.86452 5.78003 6.92707 5.9375 6.92707H15.4375C15.595 6.92707 15.746 6.86452 15.8573 6.75317C15.9687 6.64182 16.0312 6.4908 16.0312 6.33332C16.0312 6.17585 15.9687 6.02483 15.8573 5.91348C15.746 5.80213 15.595 5.73957 15.4375 5.73957H5.9375ZM5.9375 8.51041C5.78003 8.51041 5.62901 8.57296 5.51766 8.68431C5.40631 8.79566 5.34375 8.94668 5.34375 9.10416C5.34375 9.26163 5.40631 9.41265 5.51766 9.524C5.62901 9.63535 5.78003 9.69791 5.9375 9.69791H15.4375C15.595 9.69791 15.746 9.63535 15.8573 9.524C15.9687 9.41265 16.0312 9.26163 16.0312 9.10416C16.0312 8.94668 15.9687 8.79566 15.8573 8.68431C15.746 8.57296 15.595 8.51041 15.4375 8.51041H5.9375ZM5.34375 11.875C5.34375 11.7175 5.40631 11.5665 5.51766 11.4551C5.62901 11.3438 5.78003 11.2812 5.9375 11.2812H12.6667C12.8241 11.2812 12.9752 11.3438 13.0865 11.4551C13.1979 11.5665 13.2604 11.7175 13.2604 11.875C13.2604 12.0325 13.1979 12.1835 13.0865 12.2948C12.9752 12.4062 12.8241 12.4687 12.6667 12.4687H5.9375C5.78003 12.4687 5.62901 12.4062 5.51766 12.2948C5.40631 12.1835 5.34375 12.0325 5.34375 11.875Z" fill="#1C1C26" />
  </svg>

);

function Navbar({ children }) {
  const navigate = useNavigate();
  const location = useLocation();
  const [anchorEl, setAnchorEl] = useState(null);
  const [mobileOpen, setMobileOpen] = useState(false);
  const isMobile = useMediaQuery("(max-width:900px)");

  const handleMenuOpen = (e) => setAnchorEl(e.currentTarget);
  const handleMenuClose = () => setAnchorEl(null);

  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);

 const {userData,logout} = useContextData();
 const data = useContextData();

  let highlightTop = -1;
  if (location.pathname === "/admin" || location.pathname === "/admin/") highlightTop = 0;
  else if (location.pathname === "/admin/dashboard") highlightTop = 0;
  else if (location.pathname === "/admin/pet-owner") highlightTop = 48;
  else if (location.pathname === "/admin/vets") highlightTop = 96;
  else if (location.pathname === "/admin/shelter") highlightTop = 144;
  else if (location.pathname === "/admin/products") highlightTop = 192;
  else if (location.pathname === "/admin/messages") highlightTop = 240;

  const drawerContent = (
    <Box sx={{ display: "flex", flexDirection: "column", height: "100%" }}>
      <Box sx={{ display: "flex", alignItems: "center", pt: 2, pl: 1 }}>
        <Box sx={{ mx: 1 }}>
            <svg width="179" height="44" viewBox="0 0 179 44" fill="none" xmlns="http://www.w3.org/2000/svg">
                       <path d="M17.5 44C17.2448 44 17.0078 43.9814 16.7891 43.9443C16.5703 43.9072 16.3516 43.8515 16.1328 43.7772C11.2109 42.1063 7.29167 39.0156 4.375 34.5049C1.45833 29.9943 0 25.139 0 19.9392V9.41266C0 8.48439 0.264687 7.64895 0.794062 6.90633C1.32344 6.16371 2.00667 5.62532 2.84375 5.29114L15.9687 0.278481C16.4792 0.092827 16.9896 0 17.5 0C18.0104 0 18.5208 0.092827 19.0312 0.278481L32.1562 5.29114C32.9948 5.62532 33.6787 6.16371 34.2081 6.90633C34.7375 7.64895 35.0015 8.48439 35 9.41266V19.9392C35 25.1376 33.5417 29.9928 30.625 34.5049C27.7083 39.017 23.7891 42.1078 18.8672 43.7772C18.6484 43.8515 18.4297 43.9072 18.2109 43.9443C17.9922 43.9814 17.7552 44 17.5 44ZM17.5 39.5443C21.2917 38.319 24.4271 35.8684 26.9062 32.1924C29.3854 28.5165 30.625 24.4321 30.625 19.9392V9.41266L17.5 4.4L4.375 9.41266V19.9392C4.375 24.4321 5.61458 28.5165 8.09375 32.1924C10.5729 35.8684 13.7083 38.319 17.5 39.5443Z" fill="black" />
                       <path d="M13.8889 10C14.65 10 15.3483 10.2747 15.8567 10.7823C16.365 11.2905 16.6667 12.016 16.6667 12.8911C16.6667 13.762 16.3689 14.6361 15.8833 15.2977C15.4 15.9561 14.7 16.439 13.8889 16.439C13.0778 16.439 12.3778 15.9561 11.8944 15.2977C11.4089 14.6361 11.1111 13.762 11.1111 12.8917C11.1111 12.016 11.4128 11.2905 11.9217 10.7823C12.4294 10.2747 13.1278 10 13.8889 10ZM7.77778 14.8293C8.53889 14.8293 9.23722 15.104 9.74556 15.6116C10.2539 16.1198 10.5556 16.8452 10.5556 17.7204C10.5556 18.5913 10.2578 19.4654 9.77222 20.127C9.28889 20.7854 8.58889 21.2683 7.77778 21.2683C6.96667 21.2683 6.26667 20.7854 5.78333 20.127C5.29778 19.4654 5 18.5907 5 17.7209C5 16.8452 5.30167 16.1198 5.81056 15.6116C6.31833 15.104 7.01667 14.8293 7.77778 14.8293ZM17.5 18.5854C13.5422 18.5854 10.2633 21.8398 9.23111 25.9205C8.77333 27.7309 9.47167 29.6728 11.1939 30.5931C12.5622 31.325 14.61 32 17.4994 32C20.3894 32 22.4372 31.325 23.8061 30.5931C25.5278 29.6728 26.2261 27.7309 25.7683 25.921C24.7367 21.8398 21.4572 18.5854 17.5 18.5854ZM27.2222 14.8293C26.4611 14.8293 25.7628 15.104 25.255 15.6116C24.7461 16.1198 24.4444 16.8452 24.4444 17.7204C24.4444 18.5913 24.7422 19.4654 25.2278 20.127C25.7111 20.7854 26.4111 21.2683 27.2222 21.2683C28.0333 21.2683 28.7333 20.7854 29.2167 20.127C29.7022 19.4654 30 18.5913 30 17.7209C30 16.8452 29.6983 16.1198 29.19 15.6116C28.6817 15.104 27.9833 14.8293 27.2222 14.8293ZM21.1111 10C20.35 10 19.6517 10.2747 19.1439 10.7823C18.635 11.2905 18.3333 12.016 18.3333 12.8911C18.3333 13.762 18.6311 14.6361 19.1167 15.2977C19.6 15.9561 20.3 16.439 21.1111 16.439C21.9222 16.439 22.6222 15.9561 23.1056 15.2977C23.5911 14.6361 23.8889 13.762 23.8889 12.8917C23.8889 12.016 23.5872 11.2905 23.0789 10.7823C22.5706 10.2747 21.8722 10 21.1111 10Z" fill="black" />
                       <path d="M42.968 31V13.48H46.904V31H42.968ZM46.424 23.944V20.68H53.192V23.944H46.424ZM46.424 16.744V13.48H53.48V16.744H46.424ZM60.4342 31.408C58.9142 31.408 57.7462 30.92 56.9302 29.944C56.1142 28.952 55.7062 27.464 55.7062 25.48V17.848H59.5462V25.672C59.5462 26.376 59.7462 26.936 60.1462 27.352C60.5462 27.768 61.0822 27.976 61.7542 27.976C62.4422 27.976 63.0022 27.76 63.4342 27.328C63.8662 26.896 64.0822 26.312 64.0822 25.576V17.848H67.9222V31H64.8742V25.456H65.1382C65.1382 26.784 64.9622 27.896 64.6102 28.792C64.2742 29.672 63.7702 30.328 63.0982 30.76C62.4262 31.192 61.5942 31.408 60.6022 31.408H60.4342ZM71.4629 31V17.848H74.5109V23.488H74.4389C74.4389 21.632 74.8309 20.2 75.6149 19.192C76.4149 18.184 77.5669 17.68 79.0709 17.68H79.5749V20.992H78.6149C77.5589 20.992 76.7429 21.28 76.1669 21.856C75.5909 22.416 75.3029 23.232 75.3029 24.304V31H71.4629ZM88.0445 31.432C86.5885 31.432 85.3485 31.192 84.3245 30.712C83.3005 30.232 82.5165 29.568 81.9725 28.72C81.4285 27.872 81.1565 26.912 81.1565 25.84H83.5085C83.5085 26.368 83.6445 26.896 83.9165 27.424C84.2045 27.952 84.6765 28.392 85.3325 28.744C86.0045 29.096 86.9085 29.272 88.0445 29.272C89.1005 29.272 89.9645 29.12 90.6365 28.816C91.3085 28.496 91.8045 28.088 92.1245 27.592C92.4445 27.08 92.6045 26.528 92.6045 25.936C92.6045 25.216 92.2925 24.624 91.6685 24.16C91.0445 23.68 90.1325 23.384 88.9325 23.272L86.9885 23.104C85.4365 22.976 84.1965 22.496 83.2685 21.664C82.3405 20.832 81.8765 19.736 81.8765 18.376C81.8765 17.304 82.1325 16.368 82.6445 15.568C83.1725 14.768 83.9005 14.144 84.8285 13.696C85.7565 13.232 86.8365 13 88.0685 13C89.2845 13 90.3565 13.224 91.2845 13.672C92.2125 14.12 92.9325 14.752 93.4445 15.568C93.9725 16.368 94.2365 17.328 94.2365 18.448H91.8845C91.8845 17.888 91.7485 17.36 91.4765 16.864C91.2205 16.368 90.8125 15.96 90.2525 15.64C89.6925 15.32 88.9645 15.16 88.0685 15.16C87.2045 15.16 86.4845 15.312 85.9085 15.616C85.3485 15.92 84.9245 16.32 84.6365 16.816C84.3645 17.296 84.2285 17.816 84.2285 18.376C84.2285 19.016 84.4765 19.584 84.9725 20.08C85.4685 20.576 86.2045 20.864 87.1805 20.944L89.1245 21.112C90.3245 21.208 91.3565 21.464 92.2205 21.88C93.1005 22.28 93.7725 22.824 94.2365 23.512C94.7165 24.184 94.9565 24.992 94.9565 25.936C94.9565 27.008 94.6685 27.96 94.0925 28.792C93.5165 29.624 92.7085 30.272 91.6685 30.736C90.6285 31.2 89.4205 31.432 88.0445 31.432ZM98.5674 31V13.48H100.871V23.944H100.295C100.295 22.68 100.455 21.592 100.775 20.68C101.111 19.752 101.623 19.04 102.311 18.544C102.999 18.048 103.879 17.8 104.951 17.8H105.047C106.583 17.8 107.743 18.312 108.527 19.336C109.311 20.344 109.703 21.792 109.703 23.68V31H107.399V23.2C107.399 22.16 107.103 21.352 106.511 20.776C105.935 20.2 105.183 19.912 104.255 19.912C103.231 19.912 102.407 20.256 101.783 20.944C101.175 21.616 100.871 22.504 100.871 23.608V31H98.5674ZM114.543 31V18.184H116.847V31H114.543ZM112.575 20.008V18.184H116.847V20.008H112.575ZM115.191 16.12C114.679 16.12 114.295 15.984 114.039 15.712C113.799 15.44 113.679 15.096 113.679 14.68C113.679 14.264 113.799 13.92 114.039 13.648C114.295 13.376 114.679 13.24 115.191 13.24C115.703 13.24 116.079 13.376 116.319 13.648C116.575 13.92 116.703 14.264 116.703 14.68C116.703 15.096 116.575 15.44 116.319 15.712C116.079 15.984 115.703 16.12 115.191 16.12ZM126.75 31.432C125.63 31.432 124.662 31.24 123.846 30.856C123.03 30.472 122.366 29.968 121.854 29.344C121.342 28.704 120.958 27.992 120.702 27.208C120.462 26.424 120.342 25.624 120.342 24.808V24.376C120.342 23.544 120.462 22.736 120.702 21.952C120.958 21.168 121.342 20.464 121.854 19.84C122.366 19.2 123.014 18.696 123.798 18.328C124.598 17.944 125.534 17.752 126.606 17.752C127.998 17.752 129.142 18.056 130.038 18.664C130.95 19.256 131.622 20.024 132.054 20.968C132.502 21.912 132.726 22.92 132.726 23.992V25.024H121.35V23.296H131.046L130.518 24.232C130.518 23.32 130.374 22.536 130.086 21.88C129.798 21.208 129.366 20.688 128.79 20.32C128.214 19.952 127.486 19.768 126.606 19.768C125.694 19.768 124.934 19.976 124.326 20.392C123.734 20.808 123.286 21.376 122.982 22.096C122.694 22.816 122.55 23.648 122.55 24.592C122.55 25.504 122.694 26.328 122.982 27.064C123.286 27.784 123.75 28.36 124.374 28.792C124.998 29.208 125.79 29.416 126.75 29.416C127.758 29.416 128.574 29.192 129.198 28.744C129.838 28.296 130.222 27.776 130.35 27.184H132.51C132.334 28.064 131.982 28.824 131.454 29.464C130.926 30.104 130.262 30.592 129.462 30.928C128.662 31.264 127.758 31.432 126.75 31.432ZM136.141 31V13.48H138.445V31H136.141ZM134.365 15.304V13.48H138.445V15.304H134.365ZM148.216 31.432C147.304 31.432 146.464 31.264 145.696 30.928C144.928 30.592 144.256 30.12 143.68 29.512C143.12 28.904 142.68 28.2 142.36 27.4C142.056 26.6 141.904 25.736 141.904 24.808V24.376C141.904 23.464 142.056 22.608 142.36 21.808C142.664 21.008 143.088 20.304 143.632 19.696C144.192 19.088 144.848 18.616 145.6 18.28C146.368 17.928 147.216 17.752 148.144 17.752C149.12 17.752 150.008 17.96 150.808 18.376C151.608 18.776 152.264 19.408 152.776 20.272C153.288 21.136 153.576 22.256 153.64 23.632L152.68 22.096V13.48H154.984V31H153.16V25.312H153.832C153.768 26.768 153.464 27.952 152.92 28.864C152.376 29.76 151.688 30.416 150.856 30.832C150.04 31.232 149.16 31.432 148.216 31.432ZM148.528 29.416C149.312 29.416 150.024 29.24 150.664 28.888C151.304 28.536 151.816 28.032 152.2 27.376C152.584 26.704 152.776 25.92 152.776 25.024V23.92C152.776 23.04 152.576 22.296 152.176 21.688C151.792 21.064 151.272 20.592 150.616 20.272C149.976 19.936 149.272 19.768 148.504 19.768C147.656 19.768 146.904 19.968 146.248 20.368C145.608 20.768 145.104 21.328 144.736 22.048C144.384 22.768 144.208 23.616 144.208 24.592C144.208 25.568 144.392 26.424 144.76 27.16C145.128 27.88 145.64 28.44 146.296 28.84C146.952 29.224 147.696 29.416 148.528 29.416Z" fill="black" />
                     </svg>
        </Box>
      </Box>
      <Box sx={{ position: "relative", flex: 1, mt: 2 }}>
        {highlightTop !== -1 && (
          <Box
            sx={{
              position: "absolute",
              top: `${highlightTop}px`,
              left: "50%",
              transform: "translateX(-50%)",
              width: "95%",
              height: "48px",
              bgcolor: "#FE8756",
              borderRadius: "12px",
              transition: "top 0.3s ease",
              zIndex: 0,
              mt: 1,
            }}
          />
        )}
        <List>
          <ListItem disablePadding>
            <ListItemButton component={NavLink} to="/admin/dashboard" sx={{ position: "relative", zIndex: 1 }}>
              <ListItemIcon sx={{ minWidth: 32 }}><DashboardIcon /></ListItemIcon>
              <ListItemText primary="Dashboard" />
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton component={NavLink} to="/admin/pet-owner" sx={{ position: "relative", zIndex: 1 }}>
              <ListItemIcon sx={{ minWidth: 32 }}><PetOwnerIcon /></ListItemIcon>
              <ListItemText primary="Pet Owner" />
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton component={NavLink} to="/admin/vets" sx={{ position: "relative", zIndex: 1 }}>
              <ListItemIcon sx={{ minWidth: 32 }}><VetIcon /></ListItemIcon>
              <ListItemText primary="Veterinarians" />
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton component={NavLink} to="/admin/shelter" sx={{ position: "relative", zIndex: 1 }}>
              <ListItemIcon sx={{ minWidth: 32 }}><ShelterIcon /></ListItemIcon>
              <ListItemText primary="Animal Shelter" />
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton component={NavLink} to="/admin/products" sx={{ position: "relative", zIndex: 1 }}>
              <ListItemIcon sx={{ minWidth: 32 }}><Products /></ListItemIcon>
              <ListItemText primary="Products" />
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton component={NavLink} to="/admin/messages" sx={{ position: "relative", zIndex: 1 }}>
              <ListItemIcon sx={{ minWidth: 32 }}><MessageIcon /></ListItemIcon>
              <ListItemText primary="Messages" />
            </ListItemButton>
          </ListItem>
        </List>
      </Box>
    </Box>
  );

  return (
    <Box sx={{ display: "flex", minHeight: "100vh" }}>
      {isMobile ? (
        <Drawer
          variant="temporary"
          open={mobileOpen}
          onClose={handleDrawerToggle}
          ModalProps={{ keepMounted: true }}
          sx={{
            [`& .MuiDrawer-paper`]: {
              width: 240,
              bgcolor: "#E2E2E2",
              color: "text.primary",
            },
          }}
        >
          {drawerContent}
        </Drawer>
      ) : (
        <Drawer
          variant="permanent"
          sx={{
            width: 240,
            flexShrink: 0,
            [`& .MuiDrawer-paper`]: {
              width: 240,
              boxSizing: "border-box",
              bgcolor: "#E2E2E2",
              color: "text.primary",
              position: "relative",
            },
          }}
        >
          {drawerContent}
        </Drawer>
      )}
      <Box sx={{ flexGrow: 1 }}>
        <AppBar
          position="static"
          elevation={0}
          sx={{
            bgcolor: "#E2E2E2",
            borderBottom: "1px solid #eee",
            color: "text.primary",
            width: "100%",
          }}
        >
          <Toolbar sx={{ position: "relative" }}>
            {isMobile && (
              <IconButton onClick={handleDrawerToggle} edge="start" sx={{ mr: 2 }}>
                <MenuIcon />
              </IconButton>
            )}
            <Box sx={{ flexGrow: 1 }} />
            <Box sx={{ display: "flex", alignItems: "center", gap: 0 }}>
                           <Typography variant="body2" fontWeight="400">
  {data?.userInfo?.name}
</Typography>

<IconButton onClick={handleMenuOpen}>
  {data?.userInfo?.imageUrl ? (
    <Avatar src={data.userInfo.imageUrl} />
  ) : (
    <Avatar>
      {data?.userInfo?.name?.charAt(0).toUpperCase() || "U"}
    </Avatar>
  )}
</IconButton>
              <Box sx={{ position: "relative", width: "25px", height: "25px", mr: 1 }}>
                <Box
                  sx={{
                    position: "absolute",
                    top: -3,
                    right: 6,
                    width: "8px",
                    height: "8px",
                    bgcolor: "red",
                    borderRadius: "50%",
                    zIndex: 1,
                  }}
                />
                <IconButton sx={{ p: 0 }}>
                  <svg width="20" height="20" viewBox="0 0 23 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M11.0415 0C8.74813 0 6.54867 0.911049 4.92699 2.53273C3.30531 4.15441 2.39426 6.35387 2.39426 8.64727V13.0055C2.39444 13.1971 2.35003 13.3862 2.26455 13.5577L0.143499 17.7986C0.0398877 18.0057 -0.00903657 18.236 0.0013728 18.4674C0.0117822 18.6988 0.0811794 18.9237 0.202974 19.1208C0.324768 19.3178 0.494915 19.4805 0.697254 19.5933C0.899594 19.706 1.12741 19.7652 1.35906 19.7652H20.724C20.9557 19.7652 21.1835 19.706 21.3858 19.5933C21.5882 19.4805 21.7583 19.3178 21.8801 19.1208C22.0019 18.9237 22.0713 18.6988 22.0817 18.4674C22.0921 18.236 22.0432 18.0057 21.9396 17.7986L19.8198 13.5577C19.7338 13.3863 19.689 13.1972 19.6888 13.0055V8.64727C19.6888 6.35387 18.7778 4.15441 17.1561 2.53273C15.5344 0.911049 13.3349 0 11.0415 0ZM11.0415 23.4712C10.2748 23.4716 9.52687 23.2342 8.90074 22.7917C8.27461 22.3492 7.80113 21.7234 7.54556 21.0005H14.5375C14.2819 21.7234 13.8085 22.3492 13.1823 22.7917C12.5562 23.2342 11.8082 23.4716 11.0415 23.4712Z" fill="black" />
                  </svg>
                </IconButton>
              </Box>
              <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}>
                <MenuItem onClick={() => navigate("/admin/profile")}>
                  <ListItemIcon><AccountCircle fontSize="small" /></ListItemIcon>
                  <ListItemText>Profile</ListItemText>
                </MenuItem>
                <MenuItem onClick={logout}>
                  <ListItemIcon><Logout fontSize="small" /></ListItemIcon>
                  <ListItemText>Logout</ListItemText>
                </MenuItem>
              </Menu>
            </Box>
          </Toolbar>
        </AppBar>
        <Box p={3}>{children}</Box>
      </Box>
    </Box>
  );
}

export default Navbar;
